{
	"$schema": "https://vega.github.io/schema/vega/v5.json",
	"width": 500,
	"height": 500,
	"padding": 0,
	"autosize": "none",

	"signals": [{
			"name": "Time_step",
			"description": "Time step",
			"value": 0,
			"bind": {
				"input": "range",
				"min": 0,
				"max": 100
			}
		}, 
		{
			"name": "mapMaxX",
			"value": 800
		},
		{
			"name": "mapMaxY",
			"value": 800
		},
		{
			"name": "signalHeight",
			"value": 42
		},
		{
			"name": "signalPadding",
			"value": 0
		},
		{
			"name": "nodeStrokeWidthData",
			"value": null
		},
		{
			"name": "edgeStrokeWidthData",
			"value": null
		},
		{
			"name": "edgeEndStrokeWidthData",
			"value": null
		},
		{
			"name": "nodeFill",
			"value": "#e0885c"
		},
		{
			"name": "nodeStroke",
			"value": "#a34610"
		},
		{
			"name": "nodeLightFill",
			"value": "#F0C4AE"
		},
		{
			"name": "nodeLightStroke",
			"value": "#D1A388"
		},
		{
			"name": "labelColor",
			"value": "#333333"
		},
		{
			"name": "hiddenColor",
			"value": "#E9E9E9"
		},
		{
			"name": "Node_labels",
			"value": true,
			"bind": {
				"input": "checkbox"
			}
		},
		{
			"name": "Regulation_labels",
			"value": true,
			"bind": {
				"input": "checkbox"
			}
		},
		{
			"name": "mapMaxWidth",
			"update": "width"
		},
		{
			"name": "mapMaxHeight",
			"update": "height - signalHeight - signalPadding"
		},
		{
			"name": "mapSize",
			"update": "mapMaxX / mapMaxWidth >  mapMaxY / mapMaxHeight ? [mapMaxWidth, mapMaxWidth / mapMaxX * mapMaxY] : [mapMaxHeight / mapMaxY * mapMaxX, mapMaxHeight]"
		},
		{
			"name": "mapWidth",
			"update": "mapSize[0]"
		},
		{
			"name": "mapHeight",
			"update": "mapSize[1]"
		},
		{
			"name": "mapX",
			"update": "(mapMaxWidth - mapWidth)/2"
		},
		{
			"name": "mapY",
			"update": "(mapMaxHeight - mapHeight)/2"
		},
		{
			"name": "xrange",
			"update": "[mapX, mapWidth + mapX]"
		},
		{
			"name": "yrange",
			"update": "[mapY, mapHeight + mapY]"
		},
		{
			"name": "dist1",
			"value": 0,
			"on": [{
					"events": {
						"type": "touchstart",
						"filter": "event.touches.length===2"
					},
					"update": "pinchDistance(event)"
				},
				{
					"events": {
						"signal": "dist2"
					},
					"update": "dist2"
				}
			]
		},
		{
			"name": "dist2",
			"value": 0,
			"on": [{
				"events": {
					"type": "touchmove",
					"consume": true,
					"filter": "event.touches.length===2"
				},
				"update": "pinchDistance(event)"
			}]
		},
		{
			"name": "xdom",
			"update": "slice([0, mapMaxX])",
			"on": [{
					"events": {
						"signal": "delta"
					},
					"update": "[xcur[0] + span(xcur) * delta[0] / mapWidth, xcur[1] + span(xcur) * delta[0] / mapWidth]"
				},
				{
					"events": {
						"signal": "zoom"
					},
					"update": "[anchor[0] + (xdom[0] - anchor[0]) * zoom, anchor[0] + (xdom[1] - anchor[0]) * zoom]"
				}
			]
		},
		{
			"name": "ydom",
			"update": "slice([0, mapMaxY])",
			"on": [{
					"events": {
						"signal": "delta"
					},
					"update": "[ycur[0] + span(ycur) * delta[1] / mapHeight, ycur[1] + span(ycur) * delta[1] / mapHeight]"
				},
				{
					"events": {
						"signal": "zoom"
					},
					"update": "[anchor[1] + (ydom[0] - anchor[1]) * zoom, anchor[1] + (ydom[1] - anchor[1]) * zoom]"
				}
			]
		},
		{
			"name": "zoom",
			"value": 1,
			"on": [{
					"events": "wheel!",
					"force": true,
					"update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
				},
				{
					"events": {
						"signal": "dist2"
					},
					"force": true,
					"update": "dist1 / dist2"
				}
			]
		},
		{
			"name": "currentZoom",
			"update": "(xrange[1] - xrange[0]) / (xdom[1] - xdom[0])"
		},
		{
			"name": "xcur",
			"value": null,
			"on": [{
				"events": "mousedown, touchstart, touchend",
				"update": "slice(xdom)"
			}]
		},
		{
			"name": "ycur",
			"value": null,
			"on": [{
				"events": "mousedown, touchstart, touchend",
				"update": "slice(ydom)"
			}]
		},
		{
			"name": "down",
			"value": null,
			"on": [{
					"events": "touchend",
					"update": "null"
				},
				{
					"events": "mousedown, touchstart",
					"update": "xy()"
				}
			]
		},
		{
			"name": "delta",
			"value": [0, 0],
			"on": [{
				"events": [{
						"source": "window",
						"type": "mousemove",
						"consume": true,
						"between": [{
							"type": "mousedown"
						}, {
							"source": "window",
							"type": "mouseup"
						}]
					},
					{
						"type": "touchmove",
						"consume": true,
						"filter": "event.touches.length === 1"
					}
				],
				"update": "down ? [down[0]-x(), down[1]-y()] : [0,0]"
			}]
		},
		{
			"name": "anchor",
			"value": [0, 0],
			"on": [{
					"events": "wheel",
					"update": "[invert('positionXScale', x()), invert('positionYScale', y())]"
				},
				{
					"events": {
						"type": "touchstart",
						"filter": "event.touches.length===2"
					},
					"update": "[(xdom[0] + xdom[1]) / 2, (ydom[0] + ydom[1]) / 2]"
				}
			]
		},
		{
			"name": "hover",
			"value": null,
			"on": [{
					"events": "*:mouseover",
					"update": "item().datum"
				},
				{
					"events": "*:mouseout",
					"update": "null"
				}
			]
		}
	],

	"data": [{
			"name": "nodesData",
			"_mapToSedmlReport": false,
			"values": null
		},
		{
			"name": "edgesData",
			"_mapToSedmlReport": false,
			"values": null
		},
		{
			"name": "edgeEndCoordinates",
			"_mapToSedmlReport": false,
			"values": null
		},
		{
			"name": "edgesLabelsData",
			"_mapToSedmlReport": false,
			"values": null
		},
		{
			"name": "nodesLabelsData",
			"_mapToSedmlReport": false,
			"values": null
		},
		{
			"name": "nodesValues",
			"url": "https://run.api.biosimulations.org/results/60ca299e1bdfd54d622a6297/simulation.sedml%2Freport_wt?sparse=false",
			"format": {
				"type": "json",
				"property": "data"
			}
		},
		{
			"name": "nodesValueAtTimeStep",
			"_mapToSedmlReport": false,
			"source": "nodesValues",
			"transform": [{
					"type": "formula",
					"expr": "datum.values[Time_step]",
					"as": "value"
				},
				{
					"type": "project",
					"fields": ["label", "value"],
					"as": ["label", "value"]
				}
			]
		},
		{
			"name": "nodesDataAndValueAtTimeStep",
			"_mapToSedmlReport": false,
			"source": "nodesData",
			"transform": [{
				"type": "lookup",
				"from": "nodesValueAtTimeStep",
				"key": "name",
				"fields": ["label"],
				"values": ["value"],
				"as": ["value"]
			}]
		},
		{
			"name": "edgesLabelsDataVisible",
			"_mapToSedmlReport": false,
			"source": "edgesLabelsData",
			"transform": [{
				"type": "filter",
				"expr": "Regulation_labels"
			}]
		},
		{
			"name": "nodesLabelsDataVisible",
			"_mapToSedmlReport": false,
			"source": "nodesLabelsData",
			"transform": [{
				"type": "filter",
				"expr": "Node_labels"
			}]
		}
	],

	"scales": [{
			"name": "positionXScale",
			"type": "linear",
			"domain": {
				"signal": "xdom"
			},
			"range": {
				"signal": "xrange"
			},
			"zero": false
		},
		{
			"name": "positionYScale",
			"type": "linear",
			"domain": {
				"signal": "ydom"
			},
			"range": {
				"signal": "yrange"
			},
			"zero": false
		}
	],

	"marks": [{
			"name": "Edges",
			"type": "path",
			"from": {
				"data": "edgesData"
			},
			"encode": {
				"enter": {
					"path": {
						"field": "edge_svg_path"
					},
					"strokeWidth": {
						"field": "strokeWidthScaled"
					},
					"stroke": {
						"field": "line_color"
					}
				}
			}
		},
		{
			"name": "edgeEnds",
			"type": "symbol",
			"from": {
				"data": "edgeEndCoordinates"
			},
			"encode": {
				"enter": {
					"x": {
						"field": "x"
					},
					"y": {
						"field": "y"
					},
					"shape": {
						"field": "edge_end_shape"
					},
					"angle": {
						"field": "edge_end_angle"
					},
					"stroke": {
						"field": "line_color"
					},
					"strokeWidth": {"field": "stroke_width"},
					"fill": {
						"field": "line_color"
					}
				}
			}
		},
		{
			"name": "Nodes",
			"type": "rect",
			"from": {
				"data": "nodesData"
			},
			"encode": {
				"enter": {
					"x": {
						"field": "x_value"
					},
					"y": {
						"field": "y_value"
					},
					"width": {"field" : "node_width"},
					"height": {"field": "node_height"},
					"fill": {"field": "fill_color"},
					"stroke": {"field": "text_color"}
					
				}
			}
		},
		{
			"name": "nodesLabels",
			"type": "text",
			"from": {
				"data": "nodesLabelsDataVisible"
			},
			"encode": {
				"enter": {
					"x": {
						"field": "x"
					},
					"y": {
						"field": "y"
					},
					    "text": {
						"field": "id"
					    },
					    "align": {
						"value": "center"
					    },
					    "fontWeight": {"value": "bold"},
					    "fill": {"field": "text_color"}
				}
			}
		},
		{
			"name": "edgesLabels",
			"type": "text",
			"from": {
				"data": "edgesLabelsDataVisible"
			},
			"encode": {
				"enter": {
					"x": {
						"field": "x"
					},
					"y": {
						"field": "y"
					},
					    "text": {
						"field": "id"
					    },
					    "align": {
						"value": "center"
					    },
					    "fill": {"field": "line_color"}
				}
			}
		}
	]
}